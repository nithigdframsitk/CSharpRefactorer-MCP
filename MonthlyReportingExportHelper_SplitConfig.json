{
  "sourceFile": "c:/Users/NithiDhanasekaran/source/repos/Framsikt Product Development/Framsikt/Framsikt.DocExportWorker/MonthlyReportingExportHelper.cs",
  "destinationFolder": "c:/Users/NithiDhanasekaran/source/repos/Framsikt Product Development/Framsikt/Framsikt.DocExportWorker/MonthlyReportingExportHelper",
  "newNamespace": "Framsikt.DocExportWorker",
  "mainPartialClassName": "MonthlyReportingExportHelper.Core.cs",
  "mainInterface": "",
  "partialClasses": [
    {
      "fileName": "MonthlyReportingExportHelper.DocumentCreation.cs",
      "interface": "",
      "methods": [
        {
          "accessor": "public",
          "returnType": "MemoryStream",
          "name": "CreateDocument2",
          "arguments": ["IEnumerable<PublishTreeNode> publishTree", "bool includeInternalDesc", "string userId", "int budgetYear", "int forecastPeriod", "DocFormat docFormat", "int templateId", "TreeSection treeSection"]
        },
        {
          "accessor": "public",
          "returnType": "MemoryStream",
          "name": "CreateDocument",
          "arguments": ["IEnumerable<PublishTreeNode> publishTree", "bool includeInternalDesc", "string userId", "int budgetYear", "int forecastPeriod", "DocFormat docFormat"]
        },
        {
          "accessor": "public",
          "returnType": "PublishStatus",
          "name": "PublishWebsiteToStaging",
          "arguments": ["string userId", "bool includeInternalDesc", "int budgetYear", "int forecastPeriod", "int configId", "bool isApprovalProcessPublish", "string approvalPRocessId", "PublishTemplateHelper template", "bool isDebugMode"]
        },
        {
          "accessor": "public",
          "returnType": "PublishStatus",
          "name": "PublishWebsiteToProd",
          "arguments": ["string userId", "int configId"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "PublishServiceIds",
          "arguments": ["string userId", "IEnumerable<PublishTreeNode> exportTree", "DocumentBuilder builder"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "ProcessPublish",
          "arguments": ["string userId", "bool includeInternalDesc", "PublishTreeNode parent", "IEnumerable<PublishTreeNode> publishTree", "int budgetYear", "int forecastPeriod", "DocumentBuilder builder", "int nodeLevelInChapter = 0", "List<string> parentPath = null"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "Initialize",
          "arguments": ["String userId"]
        }
      ]
    },
    {
      "fileName": "MonthlyReportingExportHelper.WebContent.cs",
      "interface": "IWebContent",
      "methods": [
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertWebContent",
          "arguments": ["string userId", "DocumentBuilder builder", "PublishTreeNode webContentNode", "PublishTreeNode forewordNode", "int forecastPeriod", "bool anyFocusAreaOrItsChildSelected", "tco_publish_config pubConfig"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "CanProcessWebIntro",
          "arguments": ["PublishTreeNode contentNode"]
        },
        {
          "accessor": "private",
          "returnType": "JObject",
          "name": "CreateLayoutElement",
          "arguments": ["int pos", "string id", "string name"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertGraphicRepresentations",
          "arguments": ["string userId", "DocumentBuilder builder", "List<PublishTreeNode> GraphicNodes", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFrontPageElements",
          "arguments": ["string userId", "DocumentBuilder builder", "IEnumerable<PublishTreeNode> frontPageNodes"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertWebIntro",
          "arguments": ["string userId", "DocumentBuilder builder", "IEnumerable<PublishTreeNode> introNodes", "PublishTreeNode forewordNode", "int forecastPeriod", "tco_publish_config pubConfig"]
        },
        {
          "accessor": "private",
          "returnType": "JArray",
          "name": "FormatFrontPageKeyFigures",
          "arguments": ["string userId", "int forecastPeriod", "IPublishHelper publishHelper"]
        },
        {
          "accessor": "private",
          "returnType": "JObject",
          "name": "FormatKeyFiguresPage",
          "arguments": ["string userId", "int forecastPeriod", "IPublishHelper publishHelper"]
        },
        {
          "accessor": "private",
          "returnType": "JObject",
          "name": "FormatHomePageLink",
          "arguments": ["string Id", "string Title", "LinkType type", "string url"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "CreateConfig",
          "arguments": ["IPublishHelper publishHelper", "string searchIndexName", "tco_publish_config publishConfig", "string userId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "FormatHeaderFooter",
          "arguments": ["DocumentBuilder builder", "string userId", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFirstPage",
          "arguments": ["DocumentBuilder builder", "String tenantName", "string userId", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertWebElementCutomNodesText",
          "arguments": ["string userId", "DocumentBuilder builder", "IEnumerable<PublishTreeNode> introNodes"]
        }
      ]
    },
    {
      "fileName": "MonthlyReportingExportHelper.FinancialData.cs",
      "interface": "",
      "methods": [
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingContent",
          "arguments": ["string userId", "DocumentBuilder builder", "PublishTreeNode accContentNode", "int budgetYear", "int forecastPeriod", "List<string> treePath"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingGraphs",
          "arguments": ["string userId", "DocumentBuilder builder", "PublishTreeNode accGraphNode", "int budgetYear", "int forecastPeriod", "List<string> treePath"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertDocSetupAccountingData",
          "arguments": ["string user", "DocumentBuilder builder", "string level1Id", "int budgetYear", "int forecastPeriod", "string level2Id", "string chapterId = null", "string? nodeType = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFinanceTable",
          "arguments": ["DocumentBuilder builder", "string user", "string templateId", "int budgetYear"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFinForcastData",
          "arguments": ["string user", "DocumentBuilder builder", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string chapterId", "IPublishHelper publishHelper", "TableDefinition tabledef", "bool isMRDoc"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "ProcessFinForecastData",
          "arguments": ["List<MREconomicStatusHelper> objMREconomicStatusHelper", "List<string> data", "bool showOnlySERVICEAREASUM", "bool showOnlyNetProfit", "IPublishHelper publishHelper", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "string tenantName", "ClsOrgVersionSpecificContent orgVersionContent", "string user", "string serviceAreaId", "bool divideByMillions"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetFinForecastPercentageColumnList",
          "arguments": []
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetFinForecastTrafficColumnList",
          "arguments": []
        },
        {
          "accessor": "private",
          "returnType": "List<string>",
          "name": "UpdatedFinForecastColumns",
          "arguments": ["List<string> columnsData"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRDocFSHelper>",
          "name": "GetRequiredForecastDataBasedOnLevelID",
          "arguments": ["List<MRDocFSHelper> economicForecastData", "string levelIDFilter"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRDocFSHelper>",
          "name": "GetMREconomicStatusData",
          "arguments": ["List<MREconomicStatusHelper> objMREconomicStatusHelper", "List<string> data"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRDocFSHelper>",
          "name": "GetRequiredDataFromEconomicStatusData",
          "arguments": ["List<MRDocFSHelper> objRequiredEconomicData"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetDocFsTrafficLight",
          "arguments": ["string user", "Dictionary<string, string> deviationsKey", "List<string> fieldList", "MRDocFSHelper dataStr"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetFsFncTrafficLight",
          "arguments": ["string user", "Dictionary<string, string> deviationsKey", "List<string> fieldList", "MRDocFSHelper dataStr"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetDevYtdTrafficLight",
          "arguments": ["string user", "Dictionary<string, string> deviationsKey", "List<string> fieldList", "MRDocFSHelper dataStr"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetDevFcTrafficLight",
          "arguments": ["string user", "Dictionary<string, string> deviationsKey", "List<string> fieldList", "MRDocFSHelper dataStr"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertFinStatusTextData",
          "arguments": ["string user", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isServiceId"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertFinstatusDescriptionV1",
          "arguments": ["string user", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isServiceId"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertFinstatusDescriptionV2",
          "arguments": ["string user", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isServiceId"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertFinancialForecastbyFunction",
          "arguments": ["string user", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isServiceId", "bool isGrpByServiceArea", "string chapterId", "bool isMRDoc", "string nodeName", "string nodeType = \"\""]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertFinancialForecastbyProject",
          "arguments": ["string user", "string nodeText", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string chapterId"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "IsRowValid",
          "arguments": ["MRDocFSHelper invData", "IEnumerable<ColumnDefinition> ColumnDefinitions"]
        },
        {
          "accessor": "private",
          "returnType": "List<MREconomicStatusHelper>",
          "name": "GetForecastOrgDetails",
          "arguments": ["int tenantID", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFinancialForecastDeviationForAllServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "static": true,
          "returnType": "dynamic",
          "name": "GetColumnValue",
          "arguments": ["string columnName", "dynamic p"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "ShowChapterwiseSum",
          "arguments": ["string user", "List<clsStatusCentralChapHelper> newData", "List<string> selectedCols", "List<string> tcoParamdata", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "Dictionary<string, string> deviationKeys", "Dictionary<string, clsLanguageString> numberFormats", "IPublishHelper publishHelper", "bool divideByMillions", "string trafLightColumnList", "string percentageColumnList", "string agId", "int ColumnDetailsCount"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetScFsTrafficLight",
          "arguments": ["string user", "Dictionary<string, string> deviationsKey", "List<string> fieldList", "clsStatusCentralChapHelper dataStr"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertFinancialForecastDeviationDataByChapters",
          "arguments": ["string user", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string nodeName"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertFinancialForecastDeviationNodeData",
          "arguments": ["string user", "DocumentBuilder builder", "bool includeInternalDesc", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isServiceId", "string chapterId", "bool isMRDoc", "string nodeName"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertOverviewData",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "List<string>",
          "name": "GetListData",
          "arguments": ["string user", "List<int> percentageColumnList", "List<int> trafLightColumnList", "Dictionary<string, string> deviationKeys", "bool divideByMillions", "List<string> data", "string numberTypePercentage", "string numberTypeAmount", "string numberTypeDecimalAmount", "OverviewSubChapter d"]
        },
        {
          "accessor": "private",
          "returnType": "List<string>",
          "name": "GetListData1A1B",
          "arguments": ["List<int> percentageColumnList", "bool divideByMillions", "List<string> data", "string numberTypePercentage", "string numberTypeAmount", "string numberTypeDecimalAmount", "IntroSubChapters1A1BHelper d"]
        },
        {
          "accessor": "private",
          "returnType": "List<string>",
          "name": "GetListDataStatusCentral",
          "arguments": ["List<int> percentageColumnList", "bool divideByMillions", "List<string> data", "string numberTypePercentage", "string numberTypeAmount", "string numberTypeDecimalAmount", "clsStatusCentralChapHelper d"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBudgetAdjustmentsData",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertNetResultsData",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFinancialStatusDataForAllServiceAreas",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetFsTrafficLight",
          "arguments": ["string user", "Dictionary<string, string> deviationsKey", "List<string> fieldList", "OverviewSubChapter dataStr", "bool isOveriewChapter"]
        },
        {
          "accessor": "private",
          "returnType": "List<OverviewSubChapter>",
          "name": "FormatSelectableColumnsForFinstatusPerServiceArea",
          "arguments": ["List<string> data", "List<OverviewSubChapter> resultset"]
        },
        {
          "accessor": "private",
          "returnType": "List<OverviewSubChapter>",
          "name": "GetDescisionChapterTablesData",
          "arguments": ["string user", "string tableName", "int budgetYear", "int forecastPeriod", "bool divideByMillions", "bool isSASummary = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<OverviewSubChapter>",
          "name": "GetFinancialStatusSubChapterTableData",
          "arguments": ["string user", "string tableName", "int budgetYear", "int forecastPeriod", "bool divideByMillions"]
        },
        {
          "accessor": "private",
          "returnType": "List<OverviewSubChapter>",
          "name": "GetFinancialStatusSubChapterTableDataWith1ATransactions",
          "arguments": ["string user", "string tableName", "int budgetYear", "int forecastPeriod", "bool divideByMillions"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertStatusCentralSummaryTables",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string tableName"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertLineGroupLineItemDescriptions",
          "arguments": ["string user", "int forecastPeriod", "DocumentBuilder builder", "string nodeType"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertIntroSubchapter1A",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertIntroSubchapter1B",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertIntroSubchapter2A",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertIntroSubchapter2B",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "DisplayHeaderswithDatafor2b",
          "arguments": ["List<IntroSubChaptersHelper> programDataSet", "List<tbf_budget_form_comment> commentList", "bool divideByMillions", "bool col_balancing", "string numberTypeAmount", "string numberTypeDecimalAmount", "string numberTypePercentage", "int devperindex", "Dictionary<int, string> allActiveColumns"]
        },
        {
          "accessor": "private",
          "returnType": "List<clsStatusCentralChapHelper>",
          "name": "GetStatusCentralChapTablesData",
          "arguments": ["string user", "int budgetYear", "int forecastPeriod", "bool divideByMillions", "string tableName"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "ProposedBudgetAdjustmentsData",
          "arguments": ["string user", "DocumentBuilder builder", "bool inclInternDesc", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId = null", "int serviceLevel = 0", "bool isDocExportForService = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<IntroSubChaptersHelper>",
          "name": "GetIntroSubChaptersTableData",
          "arguments": ["string user", "string tableName", "int budgetYear", "int forecastPeriod", "bool divideByMillions", "bool isDiff = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<IntroSubChapters1A1BHelper>",
          "name": "GetIntroSubChapters1A1BTableData",
          "arguments": ["string user", "string tableName", "int budgetYear", "int forecastPeriod", "bool divideByMillions", "bool isSubGroup = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<IntroSubChaptersHelper>",
          "name": "FormatSelectableColumnsForIntroSubChapters2Aand2B",
          "arguments": ["List<string> data", "List<IntroSubChaptersHelper> resultset", "string tablename = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingGraphOne",
          "arguments": ["string user", "DocumentBuilder builder", "int forecastPeriod", "PublishTreeNode node"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingGraphThree",
          "arguments": ["string user", "DocumentBuilder builder", "int forecastPeriod", "PublishTreeNode node"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter1A",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter1B",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter2A",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter2B",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter3",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "bool needBookMark"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter4",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "bool needBookMark"]
        },
        {
          "accessor": "private",
          "returnType": "List<AccountingSubChapterHelper>",
          "name": "GetAccountingSubChaptersTablesData",
          "arguments": ["string user", "string tableName", "int budgetYear", "int forecastPeriod", "bool divideByMillions", "bool isSubGroup = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<AccountingSubChapterHelper>",
          "name": "FormatSelectableColumnsForAccSubChapters",
          "arguments": ["List<string> data", "List<AccountingSubChapterHelper> resultset", "string tablename = null"]
        },
        {
          "accessor": "private",
          "returnType": "List<IntroSubChapters1A1BHelper>",
          "name": "FormatSelectableColumnsForSubChapters1A1B",
          "arguments": ["List<string> data", "List<IntroSubChapters1A1BHelper> resultset", "string tablename = null"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "IsYearlySetup",
          "arguments": ["string user", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTotalInteractiveGraph",
          "arguments": ["DocumentBuilder builder", "string user", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBudgetAdjustmentsAppendix",
          "arguments": ["DocumentBuilder builder", "string user", "string nodeText", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "InsertFinancialForecastDeviationCentralComments",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string serviceAreaId", "string serviceunitId", "int orgLevel"]
        },
        {
          "accessor": "private",
          "returnType": "List<KeyValues>",
          "name": "FetchLowerLevelCentralSatusComments",
          "arguments": ["string userId", "int budgetYear", "int forecastPeriod", "string orgId", "int orgLevel", "bool isChildUnitsIncluded"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBudgetChangesCentralSummaryTables",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string tableName", "string orgId", "int orgLevel", "int serviceId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFramsikt1A",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFramsikt1B",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFramsikt1ANew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\"", "string nodeType = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFramsikt1BNew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\"", "string nodeType = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter1ANew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter1BNew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\"", "string nodeType = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter2ANew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter2BNew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter3New2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertSubchapter3New2020ByChapters",
          "arguments": ["string user", "DocumentBuilder builder", "string serviceAreaId", "int budgetYear", "int forecastPeriod", "string chapterId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertSubchapter3New2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAccountingSubchapter4New2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertSubchapter1ANew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertSubchapter1BNew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\"", "string nodeType = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertSubchapter2ANew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertSubchapter2BNew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFormatedData",
          "arguments": ["string user", "IPublishHelper publishHelper", "DocumentBuilder builder", "TableDefinition tableDef", "int budgetYear", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "Dictionary<string, clsLanguageString> langStringValues", "string tableName", "int forecastPeriod", "string fridimData = \"\"", "List<string>? departmentCode = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFormatedDataNew",
          "arguments": ["string user", "IPublishHelper publishHelper", "DocumentBuilder builder", "TableDefinition tableDef", "int budgetYear", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "Dictionary<string, clsLanguageString> langStringValues", "string tableName", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "ValidateBudgetCheckandReturnPercentage",
          "arguments": ["decimal amountA", "decimal amountB", "decimal divideBy", "string percentageFormat", "AmountFormats amountFormats"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "Insert2BSubTables",
          "arguments": ["string user", "IPublishHelper publishHelper", "DocumentBuilder builder", "TableDefinition tableDef", "int budgetYear", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "dynamic rptdata", "string numberformat", "string tableName", "string prctFormat"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMonthlyReportAccountingBudFormForFridData",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string nodeType"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMonthlyReportDecisionsBudFormForFridData",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string nodeType"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMonthlyReportBudgetForms1BConsolidation",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMonthlyReportBudgetForms2BConsolidation",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string tableName", "string fridimData = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBudgetFormDescription",
          "arguments": ["IPublishHelper publishHelper", "string user", "int budgetYear", "string tabName", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetBudgetFormDesc",
          "arguments": ["string userId", "int budgetYear", "string TabName"]
        }
      ]
    },
    {
      "fileName": "MonthlyReportingExportHelper.ServiceData.cs",
      "interface": "",
      "methods": [
        {
          "accessor": "private",
          "returnType": "void",
          "name": "Processnode",
          "arguments": ["string userId", "bool includeInternalDesc", "DocumentBuilder builder", "PublishTreeNode parent", "PublishTreeNode node", "int budgetYear", "int forecastPeriod", "int nodeLevelInChapter", "List<string> treePath"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMrStatusPlanData",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orgLevel = 0"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertKpiSection",
          "arguments": ["string user", "DocumentBuilder builder", "string templateId", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertStatusChecklistData",
          "arguments": ["string user", "DocumentBuilder builder", "Dictionary<string, string> nodeParameters", "int budgetYear", "int forecastPeriod", "int cityLevel = 0"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertStatusChecklistDatabyService",
          "arguments": ["string user", "DocumentBuilder builder", "Dictionary<string, string> nodeParameters", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentsStatusText",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceId", "int budgetYear", "int forecastPeriod", "int orgLevel", "bool isService = false", "bool isCurrentChapter = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTextsatServiceAreaLevel",
          "arguments": ["DocumentBuilder builder", "string user", "string nodeType", "int budgetYear", "int forecastPeriod", "Dictionary<string, string> nodeData", "int orgLevel", "bool isService"]
        },
        {
          "accessor": "private",
          "returnType": "List<string>",
          "name": "GetMrDescriptionsStr",
          "arguments": ["int tenantId", "int forecastPeriod", "int budgetYear", "string orgId", "string orgLevel", "MonthlyReportTextBoxType type", "bool isAbstract", "string serviceId = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitActivity",
          "arguments": ["string userId", "DocumentBuilder builder", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string serviceID = null", "int serviceLevel = 0", "string chapterId = \"\""]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertServiceUnitActivityData",
          "arguments": ["string userId", "DocumentBuilder builder", "string orgId1", "string orgId2", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "string chapterId"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertActivityDescription",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId1", "string orgId2", "int orgLevel"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertKostraChapter",
          "arguments": ["string userId", "string orgId", "string serviceId", "DocumentBuilder builder", "string budgetYearforKostraMR", "PublishTreeNode node", "int forecastPeriod", "int orgLevel"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertKostraProfile",
          "arguments": ["string userId", "string orgId", "string serviceId", "DocumentBuilder builder", "string budgetYearforKostraMR", "PublishTreeNode node", "int forecastPeriod", "int orgLevel"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "ServiceAreaRootHeader",
          "arguments": ["string user", "DocumentBuilder builder", "string serviceUnitDesc"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "CentralStatusAndIntroductionRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "DecisionsRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InvestmentsRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PlanRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PopDevRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "IntrnCtrlRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InvestmentsProgramRootHeader",
          "arguments": ["string user", "DocumentBuilder builder", "Dictionary<string, string> description"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "MRBudgetFormsWithFreeDimRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "MRBudgetFormsEmptyFreeDimRootHeader",
          "arguments": ["string user", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertPortfolioData",
          "arguments": ["string user", "DocumentBuilder builder", "Dictionary<string, string> description", "int forecastPeriod", "int budgetYear"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitNodeData",
          "arguments": ["string user", "DocumentBuilder builder", "string serviceUnitId", "string serviceUnitDesc"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetOrgLevelNameBasedonparam",
          "arguments": ["int tenantId", "string parameterName", "ClsOrgVersionSpecificContent orgVersionContent"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertAbsenceGridDataForServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "string orgId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string chapterId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceTxtForServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "string orgId", "int budgetYear", "int forecastPeriod", "int orgLevel", "bool isStaTxt"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceGridDataPerServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceGridDataPerService",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceTxtPerServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "bool isTxtStat"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceGridDataForService",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertAbsenceTxtForService",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isStatxtAbs"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceGridDataForAllServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "async": true,
          "returnType": "Task",
          "name": "InsertAbsenceTxtAllServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "bool isStatusDesc"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceTxtAllServiceAreaLogic",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "bool isStatusDesc"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceTxtAllServiceAreaNewFetch",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "bool isStatusDesc"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceTxtForServiceLogic",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isStatxtAbs"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAbsenceTxtForServiceNewFetch",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceId", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isStatxtAbs"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertFinPlanActionData",
          "arguments": ["string user", "DocumentBuilder builder", "PublishProcessStageInputHelper inputData"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFinPlanActionDataforService",
          "arguments": ["string user", "DocumentBuilder builder", "PublishProcessStageInputHelper inputData"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "InsertActionTypeData",
          "arguments": ["string user", "DocumentBuilder builder", "List<ClsMonthlyReport> obj", "string serviceUnitId", "int budgetYear", "string limitDescription", "int forecastPeriod", "string actionTypeHeading", "bool headingInserted", "bool isServiceId", "List<string> relevantFuncList", "List<string> relevantDeptList", "bool isFinplanAction", "bool includeInternalDesc"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFinplanActionTreelistData",
          "arguments": ["string user", "DocumentBuilder builder", "List<ClsMonthlyReport> obj", "string serviceUnitId", "int budgetYear", "string limitDescription", "int forecastPeriod", "string actionTypeHeading", "bool isServiceId", "List<string> relevantFuncList", "List<string> relevantDeptList", "bool isFinplanAction", "IPublishHelper publishHelper", "TableDefinition tableDef", "bool includeInternalDesc"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetActionPopTextDescByType",
          "arguments": ["string userId", "int actionId", "int editDescType"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitInvestmentData",
          "arguments": ["string user", "DocumentBuilder builder", "string orgId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitInvestmentDataNew",
          "arguments": ["string user", "DocumentBuilder builder", "string orgId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitAccountingData",
          "arguments": ["string user", "DocumentBuilder builder", "string level1Id", "int budgetYear", "int forecastPeriod", "string level2Id"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentDataAtCityLevel",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentDataAtCityLevelNew",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertDataPortfoliowiseNew",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "IPublishHelper publishHelper", "UserData userDetails", "TenantDBContext tenantDbContext"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "insertDataPortfoliowise",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId", "IPublishHelper publishHelper", "UserData userDetails", "TenantDBContext tenantDbContext", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "bool divideByMillions", "bool isYearlySetupEnabled", "string numberTypeAmount", "string numberTypePercentage", "string numberTypeDecimalAmount", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentProgramByServiceArea",
          "arguments": ["string user", "DocumentBuilder builder", "Dictionary<string, string> nodeData", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentProgramByServiceAreaNew",
          "arguments": ["string user", "DocumentBuilder builder", "Dictionary<string, string> nodeData", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitInvestmentDataforService",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceID", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitInvestmentDataforServiceNew",
          "arguments": ["string user", "DocumentBuilder builder", "string orgID", "string serviceID", "int budgetYear", "int forecastPeriod", "int orgLevel", "int serviceLevel", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAggregatedInvestmentDataforService",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "List<ServiceFunctionUnitHelper> serviceList", "int orgLevel", "int serviceLevel", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAggregatedInvestmentDataDescforService",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "List<ServiceFunctionUnitHelper> serviceList", "int orgLevel", "int serviceLevel", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertAggregatedInvestmentDataDescforServiceNew",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "List<ServiceFunctionUnitHelper> serviceList", "int orgLevel", "int serviceLevel", "bool isDescNode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentProgramByService",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgID", "Dictionary<string, string> nodeData", "int orgLevel = 0", "int serviceLevel = 0"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentProgramByServiceNew",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgID", "Dictionary<string, string> nodeData", "int orgLevel = 0", "int serviceLevel = 0"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertInvestmentDataAtCityLevelSearchTable",
          "arguments": ["string UserId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string empty"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertRptCityLevelData",
          "arguments": ["string user", "DocumentBuilder builder", "PublishTreeNode node", "int forecastPeriod", "int budgetYear"]
        },
        {
          "accessor": "private",
          "returnType": "List<MrPlanRptExportData>",
          "name": "GetLevel",
          "arguments": ["List<ClsOrgStructureContent> subLevel", "List<MrPlanRptExportData> data", "List<MrPlanRptExportData> sortedData"]
        },
        {
          "accessor": "private",
          "returnType": "List<MrPlanRptExportData>",
          "name": "FetchPlanRptExportData",
          "arguments": ["string userId", "int forecastPeriod", "string serviceId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "FormatExportData",
          "arguments": ["List<MrPlanRptExportData> planData", "string user", "DocumentBuilder builder", "IPublishHelper publishHelper"]
        },
        {
          "accessor": "private",
          "returnType": "Dictionary<string, string>",
          "name": "GetMrDescriptions",
          "arguments": ["int tenantId", "int forecastPeriod", "int budgetYear", "string orgId", "string orgLevel", "MonthlyReportTextBoxType type", "bool isAbstract", "string serviceId = \"\""]
        },
        {
          "accessor": "private",
          "returnType": "Dictionary<bool, string>",
          "name": "FetchTextsatServiceAreaLevel",
          "arguments": ["string userId", "int forecastperiod", "int budgetYear", "string type", "string orgID", "string orgLevel", "string serviceID = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMonthlyAbsenceData",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string orgId", "string serviceId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceAreaKIPData",
          "arguments": ["string userId", "DocumentBuilder builder", "string serviceAreaId", "int budgetYear", "int forecastPeriod", "int orgLevel", "string serviceID = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertServiceUnitKeyFiguresData",
          "arguments": ["string userId", "DocumentBuilder builder", "string orgId1", "string orgId2", "int budgetYear", "int forecastPeriod", "int orgLevel", "string otherOrgId"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetBudgetFormDesc",
          "arguments": ["string userId", "int budgetYear", "string TabName"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertFramsikt1BNew2020",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string fridimData = \"\"", "string nodeType = \"\""]
        }
      ]
    },
    {
      "fileName": "MonthlyReportingExportHelper.GoalsAndStrategy.cs",
      "interface": "",
      "methods": [
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertGoalsData",
          "arguments": ["string user", "DocumentBuilder builder", "string orgId", "int orgLevel", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "string serviceID = null", "bool isDocExportforService = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "insertGoalTable",
          "arguments": ["string user", "IPublishHelper publishHelper", "UserData userDetails", "List<MonthlyReportGoalHelper> obj", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertGoalsDataCityLevel",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string nodeText", "bool insertTargetsAtCityLevel", "string focusAreaId", "string focusAreaName"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetGtAchieveStatusIcon",
          "arguments": ["string userId", "IPublishHelper publishHelper", "List<ProgressStatus> gProgStatList", "ProgressStatus progStat"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetFocusAreaDesc",
          "arguments": ["string userId", "int forecastPeriod", "int focusAreaId"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertTargetData",
          "arguments": ["string user", "DocumentBuilder builder", "string serviceAreaId", "string serviceUnitId", "int budgetYear", "int forecastPeriod", "string serviceID = null", "bool isDocExportforService = false", "string chapterId = \"\"", "bool isMRSyncExport = false"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertClimateIndicatorsData",
          "arguments": ["string user", "DocumentBuilder builder", "string orgId", "int orgLevel", "string serviceID", "string serviceUnitId", "string attributeId", "int budgetYear", "int forecastPeriod", "bool isMRSyncPublish"]
        },
        {
          "accessor": "public",
          "returnType": "string",
          "name": "FetchMRClimateText",
          "arguments": ["MRClimateInputHelper inputObj", "int tenantId", "string user", "bool isMRSyncPublish"]
        },
        {
          "accessor": "public",
          "async": true,
          "returnType": "Task<string>",
          "name": "FetchMRClimateTextAsync",
          "arguments": ["MRClimateInputHelper inputObj", "int tenantId", "string user", "bool isMRSyncPublish"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "IsValidRow",
          "arguments": ["dynamic row", "IEnumerable<ColumnDefinition> columnDefinitions"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTargetDataCityLevel",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string nodeText", "bool insertingFromGoalsSection", "int focusArea", "int? GoalsDataGridCityLevel = null", "bool insertFAHeading = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertGoalTxt",
          "arguments": ["string goalText", "string path", "string fileName", "IPublishHelper publishHelper"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetGoalPopTxtUrl",
          "arguments": ["string txtGoalTextPath", "string goalName"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetGoalFilterGridIcons",
          "arguments": ["string popGridPath", "List<KeyValueHelper> rowFilters", "dynamic connectionData"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertMrFocusAreaText",
          "arguments": ["string user", "int budYear", "string focusAreaId", "DocumentBuilder builder"]
        },
        {
          "accessor": "public",
          "returnType": "List<MonthlyReportTargetHelper>",
          "name": "GetMrFocusArea",
          "arguments": ["string userId", "int budgetYear"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBusPlanAssignmentsCityLevel",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId", "int serviceLevel"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBusPlanAssignmentsStatusCityLevel",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId", "int serviceLevel"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertBusinessPlanAssignments",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId", "int serviceLevel", "bool isCityLevel", "string servName", "int category", "string chapterId", "bool isSyncExport"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBusinessPlanAssignmentsStatus",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId", "int serviceLevel", "bool isCityLevel", "string servName"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBusinessPlanTexts",
          "arguments": ["string user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId", "string textNodeType"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertDesc",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orglevel", "string serviceId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertBusinessPlanTaskStatus",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orgLevel", "string serviceId", "bool isCityLevel"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertStrategyDataCityLevel",
          "arguments": ["String user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "int orgLevel", "string serviceId", "int serviceLevel", "string focusareaId", "bool isCityLevelwithFA"]
        },
        {
          "accessor": "public",
          "returnType": "List<clsBusPlanStrategyGetDataRep>",
          "name": "FormatStrategyData",
          "arguments": ["string userId", "List<clsBusPlanStrategyGetDataRep> bPlanData", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "getStrategy",
          "arguments": ["IPublishHelper publishHelper", "string currentChapPath", "int strategyId", "string strategy", "string description"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertStrategyData",
          "arguments": ["String user", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod", "string orgId", "int orgLevel", "string serviceId", "int serviceLevel"]
        },
        {
          "accessor": "private",
          "returnType": "List<string>",
          "name": "InsertTabFilterData",
          "arguments": ["List<KeyValueHelper> filterIdList", "string dPath", "string tableName", "string dfType", "IPublishHelper publishHelper"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTgtGridHdrRow",
          "arguments": ["IPublishHelper publishHelper", "TableDefinition tableDef", "int budgetYear", "bool isTrafficLightsOn", "List<string> defaultColumn", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTgtGridRows",
          "arguments": ["string user", "JArray dataArray", "int focusArea", "List<KeyValueHelper> glFilters", "TableDefinition tableDef", "List<string> defaultColumn", "bool isGoalTargetColSelected", "IPublishHelper publishHelper", "ColumnDetails cellTemplate", "bool isTrafficLightsOn", "int budgetYear", "int forecastPeriod", "Dictionary<string, string> goalFilters", "CultureInfo ci", "string currentChapPath", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "string tableName", "int goalConnectionIcon"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetTargetFilterGridIcons",
          "arguments": ["string popGridPath", "List<KeyValueHelper> rowFilters", "dynamic connectionData"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetTargetPopTxtUrl",
          "arguments": ["string txtTipPath", "string tgtName"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "CheckElementConnectedToTarget",
          "arguments": ["string userId", "dynamic connectionData", "List<KeyValueHelper> rowFilters", "int budgetYear", "int forecastPeriod", "Dictionary<string, string> goalFilters", "string currentChapPath", "OrgIdOrgLevelServiceIdServiceLevel cls = null", "bool isExportService = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRStrategyPopupHelper>",
          "name": "GetGoalStrategyData",
          "arguments": ["string userId", "int budgetYear", "string goalId", "OrgIdOrgLevelServiceIdServiceLevel cls = null", "bool isExportService = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRAssignmentPopupHelper>",
          "name": "GetGoalAssignmentData",
          "arguments": ["string userId", "int budgetYear", "string goalId", "OrgIdOrgLevelServiceIdServiceLevel cls = null", "bool isExportService = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRActionPopupHelper>",
          "name": "GetGoalActionData",
          "arguments": ["string userId", "int budgetYear", "string goalId", "OrgIdOrgLevelServiceIdServiceLevel cls = null", "bool isExportService = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<MRInvPopupHelper>",
          "name": "GetGoalInvestData",
          "arguments": ["string userId", "int budgetYear", "int forecastPeriod", "string goalId", "OrgIdOrgLevelServiceIdServiceLevel cls = null", "bool isExportService = false"]
        },
        {
          "accessor": "private",
          "returnType": "List<goalTargetConnectionClimateAction>",
          "name": "GetGoalClimateData",
          "arguments": ["string userId", "int budgetYear", "string goalId", "OrgIdOrgLevelServiceIdServiceLevel cls = null", "bool isExportService = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTgtServiceLevelGridHdrRow",
          "arguments": ["IPublishHelper publishHelper", "TableDefinition tableDef", "int budgetYear", "bool isTrafficLightsOn", "List<string> defaultColumn", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMRClimateIndicatorsHeaderRow",
          "arguments": ["IPublishHelper publishHelper", "TableDefinition tableDef", "int budgetYear", "bool isTrafficLightsOn", "List<string> defaultColumn", "DocumentBuilder builder"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertTgtServiceLevelGridRows",
          "arguments": ["string user", "JArray dataArray", "List<KeyValueHelper> glFilters", "TableDefinition tableDef", "List<string> defaultColumn", "bool isGoalTargetColSelected", "IPublishHelper publishHelper", "ColumnDetails cellTemplate", "bool isTrafficLightsOn", "int budgetYear", "int forecastPeriod", "Dictionary<string, string> goalFilters", "CultureInfo ci", "string currentChapPath", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "string tableName", "Dictionary<string, clsLanguageString> numberFormats", "int goalConnectionIcon", "OrgIdOrgLevelServiceIdServiceLevel? cls"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertClimateIndicatorGridRows",
          "arguments": ["string user", "List<MRClimateIndicatorHelper> indicatorData", "TableDefinition tableDef", "List<string> defaultColumn", "IPublishHelper publishHelper", "ColumnDetails cellTemplate", "bool isTrafficLightsOn", "int budgetYear", "int forecastPeriod", "CultureInfo ci", "string currentChapPath", "Dictionary<string, clsLanguageString> langStringValuesMonthlyReport", "string tableName", "Dictionary<string, clsLanguageString> numberFormats", "OrgIdOrgLevelServiceIdServiceLevel? cls"]
        }
      ]
    },
    {
      "fileName": "MonthlyReportingExportHelper.Utilities.cs",
      "interface": "",
      "methods": [
        {
          "accessor": "public",
          "returnType": "string",
          "name": "ReplaceEmptyParagraph",
          "arguments": ["string text"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "GetTotalSelectedNodeType",
          "arguments": ["IEnumerable<PublishTreeNode> exportParameter"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "GetTotalChaptersToProcess",
          "arguments": ["string userId", "int configId", "bool isApprovalProcessPublish"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertNestedCustomNodes",
          "arguments": ["DocumentBuilder builder", "string user", "PublishTreeNode node", "bool headingIsBookmark", "bool insertAbstract", "Dictionary<string, string> paramsDictionarySA = null", "string nodeText = null"]
        },
        {
          "accessor": "public",
          "returnType": "void",
          "name": "InsertCustomNode",
          "arguments": ["DocumentBuilder builder", "string user", "Guid nodeId", "bool headingIsBookmark", "bool insertAbstract", "Dictionary<string, string> paramsDictionarySA = null", "string nodeText = null"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetMonthText",
          "arguments": ["int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "List<OverviewSubChapter>",
          "name": "FormatSelectableColumnsForDecisionChapter",
          "arguments": ["List<string> data", "List<OverviewSubChapter> resultset", "string tablename = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertEditNodesText",
          "arguments": ["string userId", "DocumentBuilder builder", "string nodeType", "string uid", "int forecastperiod", "int budgetYear", "int headingLevel", "bool insertHeading", "List<string> treePath", "bool isBookmarkNode = false"]
        },
        {
          "accessor": "private",
          "returnType": "tco_descriptions",
          "name": "FetchDescriptionsFromTable",
          "arguments": ["string userId", "string searchId", "int forecastperiod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PublishServiceDataForLevel1",
          "arguments": ["string userId", "DrillDownDataType type", "int divideByNumber", "string path", "IPublishHelper publishHelper", "int budgetYear", "int forecastPeriod", "List<ClsMRTotalAnnualGraph> resultSet", "Dictionary<string, clsLanguageString> langStrings", "string parentorgId = null", "List<ClsMRInvestmentGraph> resultSetInv = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PublishServiceDataForLevel2",
          "arguments": ["string userId", "DrillDownDataType type", "string level1Id", "string color", "int divideByNumber", "string path", "IPublishHelper publishHelper", "List<ClsMRTotalAnnualGraph> resultSet", "int budgetYear", "int forecastPeriod", "Dictionary<string, clsLanguageString> langStrings", "List<ClsMRInvestmentGraph> resultSetInv = null", "bool isPopupDisabled = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PublishDataForLevel1",
          "arguments": ["string userId", "DrillDownDataType type", "int divideByNumber", "string path", "IPublishHelper publishHelper", "int budgetYear", "int forecastPeriod", "List<ClsMRTotalAnnualGraph> resultSet", "Dictionary<string, clsLanguageString> langStrings", "List<ClsMRInvestmentGraph> resultSetInv = null"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PublishDataForLevel2",
          "arguments": ["string userId", "DrillDownDataType type", "string level1Id", "string color", "int divideByNumber", "string path", "IPublishHelper publishHelper", "List<ClsMRTotalAnnualGraph> resultSet", "int budgetYear", "int forecastPeriod", "Dictionary<string, clsLanguageString> langStrings", "List<ClsMRInvestmentGraph> resultSetInv = null", "bool isPopupDisabled = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PublishDataForLevel3",
          "arguments": ["string userId", "DrillDownDataType type", "string level1Id", "string level2Id", "string color", "int divideByNumber", "string path", "IPublishHelper publishHelper", "List<ClsMRTotalAnnualGraph> resultSet", "int budgetYear", "Dictionary<string, clsLanguageString> langStrings"]
        },
        {
          "accessor": "public",
          "returnType": "JObject",
          "name": "FormatDataForTreeMap",
          "arguments": ["List<LevelData> items", "IEnumerable<clsLanguageString> langStrings", "List<PublishGraphColorHelper> colors", "DrillDownDataType type", "int divideByNumber", "bool isLastLevel = false", "List<ClsMRInvestmentLevelData> itemsInv = null", "bool isPopUpDisabled = false"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "ExportDataExcelToBlob",
          "arguments": ["string userId", "IPublishHelper publishHelper", "string path", "string fileName", "int divideByNumber", "string keyHeadName", "Dictionary<string, double> dictItems", "Dictionary<string, clsLanguageString> langStrings"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertMRInvestmentGraph",
          "arguments": ["DocumentBuilder builder", "string user", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "PublishInvDataForLevel3",
          "arguments": ["string userId", "DrillDownDataType type", "string level1Id", "string level2Id", "int divideByNumber", "string path", "IPublishHelper publishHelper", "int budgetYear", "int forecastPeriod", "bool isService", "string refcode = null"]
        },
        {
          "accessor": "public",
          "returnType": "JObject",
          "name": "GetLevel3Data",
          "arguments": ["string userId", "DrillDownDataType type", "string level1Id", "string level2Id", "int divideByNumber", "int budgetYear", "bool isService", "string refcode"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "GetInvestmentDataForMRINVGraph",
          "arguments": ["string user", "DocumentBuilder builder", "string serviceID", "int budgetYear", "int forecastPeriod", "int serviceLevel", "string orgId", "int orgLevel"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertOrgServiceMapping",
          "arguments": ["List<ClsMRInvestmentGraph> investmentGraphs"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "ExecuteGraphicKeyFig2Procedure",
          "arguments": ["string userId", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "dynamic",
          "name": "InitializeObject",
          "arguments": []
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertPopStatDev",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertworkStatistics",
          "arguments": ["string userId", "DocumentBuilder builder", "int budgetYear", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InsertClimateStatistics",
          "arguments": ["string userId", "IPublishHelper publishHelper", "DocumentBuilder builder", "string context", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "UpdateBookmarkIdsForRunningApprovalProcess",
          "arguments": ["string userId", "string processId", "List<ApprovalBookmarkDetails> approvalBookmarkDetails"]
        },
        {
          "accessor": "private",
          "returnType": "string",
          "name": "GetForecastString",
          "arguments": ["string year", "Dictionary<string, clsLanguageString> _languageStringsPopDev"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "InitiateInvestmentData",
          "arguments": ["string userId", "int forecastPeriod"]
        },
        {
          "accessor": "private",
          "returnType": "bool",
          "name": "SetInvUpdateFlagValue",
          "arguments": ["tmr_period_setup result_flag"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "UpdatePubConfigAccessControl",
          "arguments": ["tco_publish_config publishConfig", "bool accessControlEnabled", "bool isPublicURL"]
        },
        {
          "accessor": "private",
          "returnType": "List<PublishTreeNode>",
          "name": "GetProjStructureNodes",
          "arguments": ["List<PublishTreeNode> publishTree", "int budgetYear", "int templateId", "int forecastPeriod", "string userId"]
        },
        {
          "accessor": "private",
          "returnType": "void",
          "name": "LogError",
          "arguments": ["Exception ex", "IPublishHelper publishHelper"]
        }
      ]
    }
  ]
}
